#include "MathUtil.h"

const int16_t sineTable[] =
{
	  0x00,   0x06,   0x0C,   0x12,   0x19,   0x1F,   0x25,   0x2B,
	  0x31,   0x38,   0x3E,   0x44,   0x4A,   0x50,   0x56,   0x5C,
	  0x61,   0x67,   0x6D,   0x73,   0x78,   0x7E,   0x83,   0x88,
	  0x8E,   0x93,   0x98,   0x9D,   0xA2,   0xA7,   0xAB,   0xB0,
	  0xB5,   0xB9,   0xBD,   0xC1,   0xC5,   0xC9,   0xCD,   0xD1,
	  0xD4,   0xD8,   0xDB,   0xDE,   0xE1,   0xE4,   0xE7,   0xEA,
	  0xEC,   0xEE,   0xF1,   0xF3,   0xF4,   0xF6,   0xF8,   0xF9,
	  0xFB,   0xFC,   0xFD,   0xFE,   0xFE,   0xFF,   0xFF,   0xFF,
	 0x100,   0xFF,   0xFF,   0xFF,   0xFE,   0xFE,   0xFD,   0xFC,
	  0xFB,   0xF9,   0xF8,   0xF6,   0xF4,   0xF3,   0xF1,   0xEE,
	  0xEC,   0xEA,   0xE7,   0xE4,   0xE1,   0xDE,   0xDB,   0xD8,
	  0xD4,   0xD1,   0xCD,   0xC9,   0xC5,   0xC1,   0xBD,   0xB9,
	  0xB5,   0xB0,   0xAB,   0xA7,   0xA2,   0x9D,   0x98,   0x93,
	  0x8E,   0x88,   0x83,   0x7E,   0x78,   0x73,   0x6D,   0x67,
	  0x61,   0x5C,   0x56,   0x50,   0x4A,   0x44,   0x3E,   0x38,
	  0x31,   0x2B,   0x25,   0x1F,   0x19,   0x12,   0x0C,   0x06,
	  0x00,  -0x06,  -0x0C,  -0x12,  -0x19,  -0x1F,  -0x25,  -0x2B,
	 -0x31,  -0x38,  -0x3E,  -0x44,  -0x4A,  -0x50,  -0x56,  -0x5C,
	 -0x61,  -0x67,  -0x6D,  -0x75,  -0x78,  -0x7E,  -0x83,  -0x88,
	 -0x8E,  -0x93,  -0x98,  -0x9D,  -0xA2,  -0xA7,  -0xAB,  -0xB0,
	 -0xB5,  -0xB9,  -0xBD,  -0xC1,  -0xC5,  -0xC9,  -0xCD,  -0xD1,
	 -0xD4,  -0xD8,  -0xDB,  -0xDE,  -0xE1,  -0xE4,  -0xE7,  -0xEA,
	 -0xEC,  -0xEE,  -0xF1,  -0xF3,  -0xF4,  -0xF6,  -0xF8,  -0xF9,
	 -0xFB,  -0xFC,  -0xFD,  -0xFE,  -0xFE,  -0xFF,  -0xFF,  -0xFF,
	-0x100,  -0xFF,  -0xFF,  -0xFF,  -0xFE,  -0xFE,  -0xFD,  -0xFC,
	 -0xFB,  -0xF9,  -0xF8,  -0xF6,  -0xF4,  -0xF3,  -0xF1,  -0xEE,
	 -0xEC,  -0xEA,  -0xE7,  -0xE4,  -0xE1,  -0xDE,  -0xDB,  -0xD8,
	 -0xD4,  -0xD1,  -0xCD,  -0xC9,  -0xC5,  -0xC1,  -0xBD,  -0xB9,
	 -0xB5,  -0xB0,  -0xAB,  -0xA7,  -0xA2,  -0x9D,  -0x98,  -0x93,
	 -0x8E,  -0x88,  -0x83,  -0x7E,  -0x78,  -0x75,  -0x6D,  -0x67,
	 -0x61,  -0x5C,  -0x56,  -0x50,  -0x4A,  -0x44,  -0x3E,  -0x38,
	 -0x31,  -0x2B,  -0x25,  -0x1F,  -0x19,  -0x12,  -0x0C,  -0x06,
	  0x00,   0x06,   0x0C,   0x12,   0x19,   0x1F,   0x25,   0x2B,
	  0x31,   0x38,   0x3E,   0x44,   0x4A,   0x50,   0x56,   0x5C,
	  0x61,   0x67,   0x6D,   0x73,   0x78,   0x7E,   0x83,   0x88,
	  0x8E,   0x93,   0x98,   0x9D,   0xA2,   0xA7,   0xAB,   0xB0,
	  0xB5,   0xB9,   0xBD,   0xC1,   0xC5,   0xC9,   0xCD,   0xD1,
	  0xD4,   0xD8,   0xDB,   0xDE,   0xE1,   0xE4,   0xE7,   0xEA,
	  0xEC,   0xEE,   0xF1,   0xF3,   0xF4,   0xF6,   0xF8,   0xF9,
	  0xFB,   0xFC,   0xFD,   0xFE,   0xFE,   0xFF,   0xFF,   0xFF
};

const int16_t AtanData[] =
{
	0x00, 0x00, 0x00, 0x00, 0x01, 0x01, 0x01, 0x01,
	0x01, 0x01, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02,
	0x03, 0x03, 0x03, 0x03, 0x03, 0x03, 0x03, 0x04,
	0x04, 0x04, 0x04, 0x04, 0x04, 0x05, 0x05, 0x05,
	0x05, 0x05, 0x05, 0x06, 0x06, 0x06, 0x06, 0x06,
	0x06, 0x06, 0x07, 0x07, 0x07, 0x07, 0x07, 0x07,
	0x08, 0x08, 0x08, 0x08, 0x08, 0x08, 0x08, 0x09,
	0x09, 0x09, 0x09, 0x09, 0x09, 0x0A, 0x0A, 0x0A,
	0x0A, 0x0A, 0x0A, 0x0A, 0x0B, 0x0B, 0x0B, 0x0B,
	0x0B, 0x0B, 0x0B, 0x0C, 0x0C, 0x0C, 0x0C, 0x0C,
	0x0C, 0x0C, 0x0D, 0x0D, 0x0D, 0x0D, 0x0D, 0x0D,
	0x0D, 0x0E, 0x0E, 0x0E, 0x0E, 0x0E, 0x0E, 0x0E,
	0x0F, 0x0F, 0x0F, 0x0F, 0x0F, 0x0F, 0x0F, 0x10,
	0x10, 0x10, 0x10, 0x10, 0x10, 0x10, 0x11, 0x11,
	0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x12, 0x12,
	0x12, 0x12, 0x12, 0x12, 0x12, 0x13, 0x13, 0x13,
	0x13, 0x13, 0x13, 0x13, 0x13, 0x14, 0x14, 0x14,
	0x14, 0x14, 0x14, 0x14, 0x14, 0x15, 0x15, 0x15,
	0x15, 0x15, 0x15, 0x15, 0x15, 0x15, 0x16, 0x16,
	0x16, 0x16, 0x16, 0x16, 0x16, 0x16, 0x17, 0x17,
	0x17, 0x17, 0x17, 0x17, 0x17, 0x17, 0x17, 0x18,
	0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18,
	0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19,
	0x19, 0x19, 0x1A, 0x1A, 0x1A, 0x1A, 0x1A, 0x1A,
	0x1A, 0x1A, 0x1A, 0x1B, 0x1B, 0x1B, 0x1B, 0x1B,
	0x1B, 0x1B, 0x1B, 0x1B, 0x1B, 0x1C, 0x1C, 0x1C,
	0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C,
	0x1D, 0x1D, 0x1D, 0x1D, 0x1D, 0x1D, 0x1D, 0x1D,
	0x1D, 0x1D, 0x1D, 0x1E, 0x1E, 0x1E, 0x1E, 0x1E,
	0x1E, 0x1E, 0x1E, 0x1E, 0x1E, 0x1E, 0x1F, 0x1F,
	0x1F, 0x1F, 0x1F, 0x1F, 0x1F, 0x1F, 0x1F, 0x1F,
	0x1F, 0x1F, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,
	0x20, 0x00
};

void GetSine(uint8_t angle, int16_t *sin, int16_t *cos)
{
	if (sin != NULL)
		*sin = sineTable[angle];
	if (cos != NULL)
		*cos = sineTable[angle + 0x40];
}

uint8_t GetAtan(int16_t x, int16_t y)
{
	if (x == 0 && y == 0)
		return 0x40;

	uint8_t angle = abs(x) > abs(y) ? AtanData[(abs(y) * 0x100) / abs(x)] : 0x40 - AtanData[(abs(x) * 0x100) / abs(y)];

	if (x < 0)
		angle = -angle + 0x80;
	if (y < 0)
		angle = -angle + 0x100;
	return angle;
}